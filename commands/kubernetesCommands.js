window.kubernetesCommands = [
    { command: 'kubectl version', description: 'Displays the Kubernetes client and server version' },
    { command: 'kubectl config view', description: 'Displays the current Kubernetes context and configuration' },
    { command: 'kubectl config use-context <context_name>', description: 'Switches between Kubernetes contexts' },
    { command: 'kubectl get nodes', description: 'Lists all nodes in the Kubernetes cluster' },
    { command: 'kubectl get pods', description: 'Lists all running pods in the default namespace' },
    { command: 'kubectl get services', description: 'Lists all services in the default namespace' },
    { command: 'kubectl get deployments', description: 'Lists all deployments in the default namespace' },
    { command: 'kubectl describe pod <pod_name>', description: 'Describes a specific pod' },
    { command: 'kubectl describe node <node_name>', description: 'Describes a specific node' },
    { command: 'kubectl logs <pod_name>', description: 'Shows logs from a specific pod' },
    { command: 'kubectl exec -it <pod_name> -- /bin/bash', description: 'Executes a command inside a running pod' },
    { command: 'kubectl apply -f <file.yaml>', description: 'Applies a configuration file to the cluster' },
    { command: 'kubectl delete pod <pod_name>', description: 'Deletes a specific pod' },
    { command: 'kubectl scale deployment <deployment_name> --replicas=<num_replicas>', description: 'Scales a deployment to the specified number of replicas' },
    { command: 'kubectl rollout status deployment <deployment_name>', description: 'Shows the status of the rollout of a deployment' },
    { command: 'kubectl rollout undo deployment <deployment_name>', description: 'Undoes the last rollout for a deployment' },
    { command: 'kubectl get namespaces', description: 'Lists all namespaces in the cluster' },
    { command: 'kubectl create namespace <namespace_name>', description: 'Creates a new namespace' },
    { command: 'kubectl delete namespace <namespace_name>', description: 'Deletes a specific namespace' },
    { command: 'kubectl get configmaps', description: 'Lists all ConfigMaps in the current namespace' },
    { command: 'kubectl create configmap <configmap_name> --from-file=<file_path>', description: 'Creates a ConfigMap from a file' },
    { command: 'kubectl get secrets', description: 'Lists all Secrets in the current namespace' },
    { command: 'kubectl create secret generic <secret_name> --from-literal=<key>=<value>', description: 'Creates a generic secret' },
    { command: 'kubectl expose deployment <deployment_name> --type=LoadBalancer --port=80', description: 'Exposes a deployment as a service with a load balancer' },
    { command: 'kubectl port-forward <pod_name> 8080:80', description: 'Forwards a local port to a port on the pod' },
    { command: 'kubectl top nodes', description: 'Displays resource usage for nodes' },
    { command: 'kubectl top pods', description: 'Displays resource usage for pods' },
    { command: 'kubectl cordon <node_name>', description: 'Marks a node as unschedulable' },
    { command: 'kubectl drain <node_name> --ignore-daemonsets', description: 'Safely evicts all pods from a node' },
    { command: 'kubectl taint nodes <node_name> <key>=<value>:NoSchedule', description: 'Applies a taint to a node to prevent pod scheduling' }
];
